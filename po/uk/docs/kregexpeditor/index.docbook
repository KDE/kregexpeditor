<?xml version="1.0" ?>
<!DOCTYPE book PUBLIC "-//KDE//DTD DocBook XML V4.5-Based Variant V1.1//EN" "dtd/kdedbx45.dtd" [
 <!ENTITY % Ukrainian "INCLUDE">
 <!ENTITY % addindex "IGNORE">
]>

<book id="kregexpeditor" lang="&language;">

  <bookinfo>
    <title
>Підручник з редактора формальних виразів</title>

    <authorgroup>
      <author
><firstname
>Jesper K.</firstname
> <surname
>Pedersen</surname
> <affiliation
><address
>&Jesper.Pedersen.mail;</address
></affiliation>
      </author>
<othercredit role="translator"
><firstname
>Юрій</firstname
><surname
>Чорноіван</surname
><affiliation
><address
><email
>yurchor@ukr.net</email
></address
></affiliation
><contrib
>Переклад українською</contrib
></othercredit
> 
    </authorgroup>

    <date
>3 липня 2001 року</date>
    <releaseinfo
>0.1</releaseinfo>

    <legalnotice
>&underFDL;</legalnotice>

    <copyright>
      <year
>2001</year>
      <holder
>Jesper K. Pedersen</holder>
    </copyright>

    <abstract>
      <para
>У цьому підручнику описано віджет редактора формальних виразів</para>
    </abstract>

    <keywordset>
      <keyword
>KDE</keyword>
      <keyword
>формальний вираз</keyword>
    </keywordset>
  </bookinfo>

  <!-- ====================================================================== -->
  <!--                               Introduction                             -->
  <!-- ====================================================================== -->
  <chapter id="introduction">
    <title
>Вступ</title>


    <para
>Редактор формальних виразів призначено для редагування формальних виразів у графічному режимі (на відміну від використання синтаксису <acronym
>ASCII</acronym
>). Традиційні формальні вирази вводяться у синтаксисі <acronym
>ASCII</acronym
>, який, наприклад, може виглядати так: <literal
>^.*kde\b</literal
>. Основними недоліками використання подібного синтаксису є: <itemizedlist>
        <listitem
><para
>Його важко зрозуміти, якщо ви не програміст.</para
></listitem>

        <listitem
><para
>За його використання вам доведеться <emphasis
>екранувати</emphasis
> деякі символи (для пошуку зірочки вам доведеться ввести <literal
>\*</literal
>). </para
></listitem>

        <listitem
><para
>Для його використання вам слід пам’ятати правила <emphasis
>пріоритетності</emphasis
> (Чому відповідає послідовність символів <literal
>x|y*</literal
>? Окремому <literal
>x</literal
> або довільній кількості <literal
>y</literal
> <emphasis
>ЧИ</emphasis
> довільній кількості <literal
>x</literal
> і <literal
>y</literal
>?)</para
></listitem>
      </itemizedlist>
    </para>

    <para
>З іншого боку редактор формальних виразів надає вам змогу <emphasis
>намалювати</emphasis
> ваш формальний вираз у формі, яка не допускає двозначностей. Цей редактор розв’язує принаймні проблеми пунктів два і три, про які ми згадували вище. Можливо, він і не зробить формальні вирази доступними навіть для тих, хто не має нічого спільного з програмуванням, але перевірити це можна лише на власному досвіді. Отже, якщо ви не є програмістом і змогли скористатися всією потужністю формальних виразів за допомогою цього редактора, будь ласка,  <ulink url="mailto:blackie@kde.org"
>повідомте про це авторові</ulink
>. </para>

  </chapter>

  <!-- ====================================================================== -->
  <!--                       What is a Regular Expression                     -->
  <!-- ====================================================================== -->
  <chapter id="whatIsARegExp">
    <title
>Що таке «формальний вираз»?</title>

    <para
>Формальний вираз — це спосіб вказати <emphasis
>умови</emphasis
>, які має бути виконано у певній ситуації. Зазвичай, під час виконання пошуку у текстовому редакторів ви вказуєте текст, який має знайти програма <emphasis
>буквально</emphasis
>. За допомогою ж формального виразу ви можете вказати програмі певний клас відповідності знайденого. Прикладами таких класів є <emphasis
>Я шукаю слово &kde;, але лише на початку рядка</emphasis
>, або <emphasis
>Я шукаю слово <literal
>the</literal
>, але це слово має стояти окремо</emphasis
>, або <emphasis
>Я шукаю файли, назви яких починаються зі слова <literal
>test</literal
>, за яким іде певне число, наприклад <literal
>test12</literal
>, <literal
>test107</literal
> або <literal
>test007</literal
></emphasis
></para>

    <para
>Великі формальні вирази складаються з менших формальних виразів, так само, які великі іграшки Лего складаються з маленьких частинок. Так само, які і у світі Лего, існує декілька основних будівельних блоків. Нижче ми познайомимося з кожним з цих будівельних блоків за допомогою декількох прикладів.</para>

    <example>
      <title
>Пошук звичайного тексту.</title>
      <para
>Якщо вам просто треба знайти вказаний текст, формальні вирази вам точно не знадобляться. Причиною цього є те, що за використання формальних виразів деяким символам надається особливе значення. Серед цих символів: <literal
>.*|$</literal
>. Отже, якщо вам потрібно знайти послідовність символів <literal
>kde.</literal
> (тобто послідовність символів <literal
>kde</literal
>, за якою слідує крапка), вам доведеться визначати цю послідовність як формальний вираз <literal
>kde\.</literal
><footnote
><para
>У редакторі формальних виразів цю проблему вже вирішень: програма саме потурбується про екранування символів.</para
></footnote
> Записи на зразок <literal
>\.</literal
> замість простої <literal
>.</literal
> називаються <emphasis
>екрануванням</emphasis
>. </para>
    </example>

    <example id="positionregexp">
      <title
>Пошук &URL;</title>
      <para
>Якщо ви виберете якийсь фрагмент тексту, який схожий на адресу &URL;, у &kde;, програма <command
>klipper</command
> запропонує вам запустити <command
>konqueror</command
> на сторінці з відповідною адресою &URL;.</para>

      <para
><command
>Klipper</command
> виконує це завдання за допомогою порівняння вибраного фрагмента з декількома різними формальними виразами, якщо буде виявлено збіг з одним з цих формальних виразів, програма запропонує відповідну команду.</para>
      
      <para
>Формальний вираз для &URL; повинен (окрім всього іншого) починатися з послідовності символів <literal
>http://</literal
>. У формальних виразах подібну умову можна вказати, якщо додати перед послідовністю символів <literal
>http://</literal
> символ «дашка» (символ <literal
>^</literal
>).</para>

      <para
>Наведена вище умова є прикладом визначення у формальних виразах позиції послідовності символів у рядку. Подібним же чином, позицію <emphasis
>наприкінці рядка</emphasis
> можна вказати за допомогою символу <literal
>$</literal
> (тобто значка долара).</para>
    </example>

    <example id="boundaryregexp">
      <title
>Пошук слова <literal
>the</literal
>, але не <emphasis
>the</emphasis
><literal
>re</literal
>, <literal
>brea</literal
><emphasis
>the</emphasis
> or <literal
>ano</literal
><emphasis
>the</emphasis
><literal
>r</literal
></title>
      <para
>У описаний вище спосіб можна вказати ще два типи розташування послідовності символів, а саме <emphasis
>розташування на межі слова</emphasis
> і <emphasis
>розташування <emphasis
>не</emphasis
> не на межі слова</emphasis
>. Такі розташування можна задати за допомогою послідовностей символів <literal
>\b</literal
> (на межі слова) і <literal
>\B</literal
> (не на межі слова)</para>

      <para
>Отже, пошук слова <literal
>the</literal
> можна виконати за допомогою формального виразу <literal
>\bthe\b</literal
>. Таким чином ми визначаємо, що шукати слід послідовність символів <literal
>the</literal
> по обидва боки від якої немає літер (тобто з обох боків цієї послідовності маємо межі слова).</para>

      <para
>Формальні вирази з визначенням одного з чотирьох розташувань можна вставити у редакторі формальних виразів за допомогою <link linkend="positiontool"
>інструменту визначення розташування</link
>.</para>
    </example>

    <example id="altnregexp">
      <title
>Пошук <literal
>цього</literal
> або <literal
>того</literal
></title>
      <para
>Припустімо, що вам потрібно знайти у всьому документі слова <literal
>цього</literal
> або слова <literal
>того</literal
>. За використання звичайних способів пошуку вам довелося б виконати два проходи: перший раз знайти всі <literal
>цього</literal
>, а другий раз — всі <literal
>того</literal
>.</para>

      <para
>За допомогою формальних виразів ви зможете виконати пошук обох послідовностей символів за один прохід. Виконати подібний пошук можна за допомогою виразу <literal
>цього|того</literal
>, тобто відокремленням цих двох слів вертикальною рискою.<footnote
><para
>Зауважте, що по обидва боки від вертикальної риски можна вказувати формальні вирази, отже цією можливістю можна користуватися не лише для пошуку двох різних послідовностей символів, але і для пошуку двох різних формальних виразів.</para
></footnote
></para>

      <para
>У редакторі формальних виразів вам не потрібно буде зазначати вертикальну риску власноруч, замість цього можна буде скористатися <link linkend="altntool"
>інструментом варіантів</link
>, а потім вказати менші формальні вирази один над одним.</para>
    </example>

    <example id="repeatregexp">
      <title
>Пошук довільного виразу</title>
      <para
>Формальні вирази часто порівнюють з використанням шаблонів заміни у командній оболонці, тобто з можливістю вказувати декілька файлів одразу за допомогою використання зірочки. Приклади використання шаблонів заміни наведено нижче: <itemizedlist>
          <listitem
><para
><literal
>ls *.txt</literal
> — тут <literal
>*.txt</literal
> — шаблон заміни, що відповідає всім назвам файлів, які завершуються суфіксом <literal
>.txt</literal
>.</para
></listitem>
          <listitem
><para
><literal
>cat test??.res</literal
> — покаже вміст всіх файлів, назви яких починаються на <literal
>test</literal
>, за яким йде два довільних символи, а завершуються суфіксом <literal
>.res</literal
></para
></listitem>
        </itemizedlist>
      </para>

      <para
>У командній оболонці зірочка відповідає довільному символу, вказаному довільну кількість разів. Іншими словами, зірочка відповідає <emphasis
>будь-чому</emphasis
>. Подібну властивість у синтаксисі формальних виразів має послідовність символів <literal
>.*</literal
>. Крапка відповідає окремому довільному символу, тобто лише <emphasis
>одному</emphasis
> символу, а зірочка позначає, що формальний вираз, який їй передує, може зустрічатися довільну кількість разів. Разом ці два символи означають: довільний символ довільну кількість разів.</para>

      <para
>Таке позначення може здатися занадто заплутаним, але якщо ви поглянете на все це ширше, ви побачите наскільки потужним є подібний синтаксис. Розглянемо ще один базовий формальний вираз: <literal
>a</literal
>. Саме літера <literal
>a</literal
> є формальним виразом, який відповідає одній літері, а саме літері <literal
>a</literal
>. Якщо сполучити цю літеру з зірочкою, тобто скористатися послідовністю <literal
>a*</literal
>, у нас вийде формальний вираз, який відповідає довільній кількості літер «a».</para>

      <para
>Ми можемо сполучати декілька формальних виразів, один за іншим, наприклад <literal
>кан(та)*</literal
>. <footnote
><para
><literal
>(та)*</literal
> повідомляє інструменту пошуку, що вираз у круглих дужках має бути повторено довільну кількість разів.</para
></footnote
> Уявімо, що ви ввели цей формальний вираз у звичайне поле пошуку вашого текстового редактора, тоді за ним буде знайдено такі слова (серед інших): <literal
>кан</literal
>, <literal
>канта</literal
>, <literal
>кантата</literal
>, <literal
>кантатататататататата</literal
> </para>

      <para
>На основі наведеної вище інформації вам, ймовірно, буде нескладно створити формальний вираз для шаблону командного рядка <literal
>test??.res</literal
>. Відповідь: <literal
>test..\.res</literal
>. Крапка відповідає одному довільному символу. Щоб вказати саму крапку, вам слід написати <literal
>\.</literal
><footnote
><para
>Подібні послідовності називаються екрануванням</para
></footnote
>. Іншими словами, формальному виразу <literal
>\.</literal
> відповідає крапка, а сам символ крапки відповідає довільному символу. </para>

      <para
>У редакторі формальних виразів формальний вираз з повторенням можна створити за допомогою <link linkend="repeattool"
>інструменту повторення</link
> </para>
    </example>

    <example id="lookaheadregexp">
      <title
>Заміна <literal
>&amp;</literal
> на <literal
>&amp;amp;</literal
> у документі &HTML;</title
> <para
>У форматі &HTML; спеціальний символ <literal
>&amp;</literal
> слід записувати так: <literal
>&amp;amp;</literal
>. Тут ми маємо справу з чимось подібним до екранування у формальних виразах.</para>

      <para
>Уявімо, що ви створюєте документ &HTML; у звичайному редакторі (наприклад &XEmacs; або &kate;) і чомусь зовсім забули про це правило. Що ж робити, коли ви виявите власну помилку? Доведеться замінити всі <literal
>&amp;</literal
> на <literal
>&amp;amp;</literal
>.</para>

      <para
>Це завдання можна виконати звичайною дією з пошуку і заміни, але тут може виникнути інша проблема. Уявімо, що ви <emphasis
>іноді</emphasis
> все ж користувалися цим правилом. Тоді звичайна заміна призведе до того, що замість <literal
>&amp;amp;</literal
> у тексті з’явиться <literal
>&amp;amp;amp;</literal
></para>

      <para
>Насправді нам потрібно замінити символ <literal
>&amp;</literal
>, лише якщо після нього <emphasis
>немає</emphasis
> послідовності літер <literal
>amp;</literal
>. Зробити це можна за допомогою формального виразу з <emphasis
>додатним випередженням</emphasis
>. </para>

      <para
>Формальний вираз, який відповідатиме лише амперсанду, за яким немає літер <literal
>amp;</literal
> виглядатиме так: <literal
>&amp;(?!amp;)</literal
>. Його, звичайно ж, простіше прочитати за допомогою редактора формальних виразів, у якому можна скористатися <link linkend="lookaheadtools"
>інструментами випереджального пошуку</link
>.</para>
    </example>

  </chapter>

  <!-- ====================================================================== -->
  <!--                    Using the Regular Expression Editor                 -->
  <!-- ====================================================================== -->
  <chapter id="theEditor">
    <title
>Користування редактором формальних виразів</title>

    <para
>У цій главі ми поговоримо про те, як працює редактор формальних виразів. </para>

    <!-- ====================================================================== -->
    <!--                   The organization of the screen                       -->
    <!-- ====================================================================== -->
    <sect1 id="screenorganization">
      <title
>Компонування вікна</title>

      <mediaobject>
        <imageobject
><imagedata format="PNG" fileref="theEditor.png"/></imageobject>
      </mediaobject>
      
      <para
>Найважливішою частиною редактора є, звичайно ж, область редагування: це область у якій ви створюватимете ваш формальний вираз. Це велика сіра область, розташована посередині вікна.</para>

      <para
>Над областю редагування розташовано дві панелі інструментів. На першій з них містяться кнопки <link linkend="editingtools"
>дій з редагування</link
> — вони подібні до інструментів малювання у програмі, призначеній для малювання. На другій панелі інструментів міститься кнопка <emphasis
>Що це?</emphasis
> та кнопки дій «Вернути» і «Повторити».</para>

      <para
>Під областю редагування ви побачите формальний вираз, який ви створюєте, у так званому синтаксисі ASCII. Протягом редагування формального виразу за допомогою графічного редактора вираз ASCII змінюватиметься. Якщо ви надаєте перевагу зміні ASCII вигляду, ви можете перейти до відповідного поля, — поле графічного редактора оновлюватиметься відповідно до змін у тексті ASCII.</para>

      <para
>Нарешті, ліворуч від області редагування ви побачите декілька попередньо створених формальних виразів. У цих виразів два призначення: 1) після завантаження до редактора формального виразу подібні формальні вирази виглядають <emphasis
>приємніше</emphasis
> або зрозуміліше за звичайні форми формальних виразів. На знімку вікна, наведеному нижче, ви можете бачити, як послідовність символів ASCII «.*» замінено на панель з написом «будь-що». (2) ви можете створити власні попередньо визначені формальні вирази, якими згодом буде зручно користуватися. Докладніше про створення ваших власних типових формальних виразів можна дізнатися з розділу, присвяченому <link linkend="userdefinedregexps"
>визначеним користувачем формальним виразам</link
>.</para
>      
    </sect1>

    <!-- ====================================================================== -->
    <!--                         Editing Tools                                  -->
    <!-- ====================================================================== -->
    <sect1 id="editingtools">
      <title
>Інструменти редагування</title>
      <para
>У цьому розділі ми вважатимемо, що ви вже прочитали главу, присвячену <link linkend="whatIsARegExp"
>опису формальних виразів</link
> або вже знайомі з предметом з інших джерел.</para>
      
      <para
>Всі інструменти редагування перебувають на панелі інструментів, розташованій над областю редагування. Про кожен з цих інструментів ми поговоримо трохи згодом.</para>
      
      

      <simplesect id="selecttool">
        <title
>Інструмент вибору</title>
	<mediaobject>
            <imageobject
><imagedata format="PNG" fileref="select.png"/>
        </imageobject
></mediaobject>
        <para
>Інструмент вибору призначено для позначення елементів для наступного виконання дії з вирізання з вставленням або перетягування зі скиданням. Дія цього інструменту подібна до дії інструменту вибору у будь-якій з програм для малювання.</para>
      </simplesect>
        
      

      <simplesect id="texttool"
><title
>Текстовий інструмент</title>
      <mediaobject>
      <imageobject>
	    <imagedata format="PNG" fileref="text.png"/>
	</imageobject
></mediaobject>
		        
        <para
><inlinemediaobject
><imageobject>
              <imagedata format="PNG" fileref="texttool.png"/>
        </imageobject
></inlinemediaobject
></para>

        <para
>За допомогою цього інструменту ви можете ввести звичайний текст для пошуку. Текст сприйматиметься інструментом буквально, тобто вам не потрібно перейматися екрануванням спеціальних символів. У наведеному вище прикладі буде створено такий формальний вираз: <literal
>abc\*\\\)</literal
></para>
      </simplesect>

      

      <simplesect id="characterstool"
><title
>Інструмент символів</title>
      <mediaobject
><imageobject>
            <imagedata format="PNG" fileref="characters.png"/>
            </imageobject
></mediaobject>
        <para
><inlinemediaobject
><imageobject>
            <imagedata format="PNG" fileref="charactertool.png"/>
            </imageobject
></inlinemediaobject
></para>
        
        <para
>За допомогою цього інструменту можна додавати діапазони символів. Прикладами таких діапазонів у синтаксисі ASCII є <literal
>[0-9]</literal
>, <literal
>[^a-zA-Z,_]</literal
>. Під час додавання елемента за допомогою цього інструменту програма відкриває діалогове вікно, у якому ви можете вказати відповідний діапазон символів.</para>
        
        <para
>Див. опис <link linkend="repeatregexp"
>формальних виразів з повторенням</link
>.</para>
      </simplesect>

      
      
      <simplesect id="anychartool"
><title
>Інструмент будь-якого символу</title>
        <mediaobject
><imageobject>
              <imagedata format="PNG" fileref="anychar.png"/>
        </imageobject
></mediaobject>
        <para
><inlinemediaobject
><imageobject
><imagedata format="PNG" fileref="anychartool.png"/>
        </imageobject
></inlinemediaobject
></para>

        <para
>Це формальний вираз «крапка» (.). він відповідає одному довільному символу.</para
> 
        
       
        
        </simplesect>



      <simplesect id="repeattool"
><title
>Інструмент повторення</title>
      <mediaobject
><imageobject>
            <imagedata format="PNG" fileref="repeat.png"/>
            </imageobject
></mediaobject>
        <para
><inlinemediaobject
><imageobject>
            <imagedata format="PNG" fileref="repeattool.png"/>
            </imageobject
></inlinemediaobject
></para>

        <para
>Цей інструмент призначено для визначення повторюваності елементів. Його відповідниками у синтаксисі ASCII є символи зірочки (*), плюса (+), знака питання (?) і діапазонів ({3,5}). Під час додавання відповідного елемента програма відкриватиме діалогове вікно, у якому ви зможете ввести кількість повторів.</para>
          
          <para
>Вказати елемент для повторення можна додаванням відповідних елементів чи символів до поля, яке додасть у вираз інструмент.</para>

          <para
>Елементи для повторення можна створити як поза блоком, так і всередині блоку повторення. Це означає, що ви, наприклад, можете створити спочатку формальний вираз для повторення, обрати його, а потім скористатися інструментом повторення. Ви також можете спочатку додати елемент повторення, а потім вказати у відповідному полі те, що, власне, слід повторювати.</para>

        <para
>Див. опис <link linkend="repeatregexp"
>формальних виразів з повторенням</link
>.</para>
        </simplesect>




      <simplesect id="altntool"
><title
>Інструмент варіантів</title>
      <mediaobject
><imageobject>
            <imagedata format="PNG" fileref="altn.png"/>
            </imageobject
></mediaobject>
        <para
><inlinemediaobject
><imageobject
><imagedata format="PNG" fileref="altntool.png"/>
        </imageobject
></inlinemediaobject
></para>
        
        <para
>Цей інструмент додає формальний вираз з варіантами (|). Вказати варіанти можна додаванням їх у поля варіантів всередині блоку, який інструмент вставляє до формального виразу.</para>

        <para
>Див. опис <link linkend="altnregexp"
>формальних виразів з варіантами</link
>.</para>
      </simplesect>
      



      <simplesect id="compoundtool"
><title
>Інструмент складання</title>
        <mediaobject
><imageobject>
              <imagedata format="PNG" fileref="compound.png"/>
        </imageobject
></mediaobject>
        <para
><inlinemediaobject
><imageobject
><imagedata format="PNG" fileref="compoundtool.png"/>
        </imageobject
></inlinemediaobject
></para>
        
        <para
>Інструмент складання не відповідає жодному формальному виразу. Він використовується для групування частин формального виразу у єдиний блок, який потім можна згорнути до заголовка цього блоку. Приклад подібного згортання можна бачити у правій частині наведеного вище знімка екрана.</para>
      </simplesect>





      <simplesect id="positiontool"
><title
>Інструменти «Початок/Кінець рядка»</title>
        <mediaobject
><imageobject>
            <imagedata format="PNG" fileref="begline.png"/>
        </imageobject
></mediaobject>
          <mediaobject
><imageobject>
              <imagedata format="PNG" fileref="endline.png"/>
        </imageobject
></mediaobject>
        <para
><inlinemediaobject
><imageobject
><imagedata format="PNG" fileref="linestartendtool.png"/>
        </imageobject
></inlinemediaobject
></para>

        <para
>Інструменти початку і завершення рядка призначено для додавання позначок початку і кінцю рядка, відповідно. Формальний вираз, наведений відповідає лише рядкам, які починаються з пробілів.</para>
        
        <para
>Див. опис <link linkend="positionregexp"
>формальних виразів розташування</link
>.</para>
      </simplesect>





      <simplesect
><title
>Інструменти межі (або її відсутності) слова</title>
      <mediaobject
><imageobject>
            <imagedata format="PNG" fileref="wordboundary.png"/>
            </imageobject
></mediaobject>
          <mediaobject
><imageobject
><imagedata format="PNG" fileref="nonwordboundary.png"/>
        </imageobject
></mediaobject>
        <para
><inlinemediaobject
><imageobject
><imagedata format="PNG" fileref="boundarytools.png"/>
        </imageobject
></inlinemediaobject
></para>

        <para
>За допомогою інструментів меж можна вказати інструменту, що слід шукати межу слова або відсутність такої межі. Таким чином, формальний вираз на знімку вікна відповідає будь-яким словам, що починаються з <literal
>the</literal
> але саме слово <literal
>the</literal
> йому не відповідає.</para>

        <para
>Див. опис <link linkend="boundaryregexp"
>формальних виразі межі</link
>.</para>
      </simplesect>





      <simplesect id="lookaheadtools"
><title
>Інструменти додатного або від’ємного випередження</title>
	  <mediaobject
><imageobject
> <imagedata format="PNG" fileref="poslookahead.png"/>
        </imageobject
></mediaobject>
          <mediaobject
><imageobject
> <imagedata format="PNG" fileref="neglookahead.png"/>
        </imageobject
></mediaobject>

        <para
><inlinemediaobject
><imageobject
> <imagedata format="PNG" fileref="lookaheadtools.png"/>
        </imageobject
></inlinemediaobject
></para>

        <para
>За допомогою інструментів випереджального пошуку можна вказати формальний вираз послідовності символів перед або після формального виразу. Пошуку ж самих цих послідовностей інструментом не виконуватиметься.</para>

        <para
>Зауваження: додавати випереджальні формальні вирази можна лише у кінець формального виразу. Віджет редактора формальних виразів не має подібних обмежень.</para>

        <para
>Див. опис <link linkend="lookaheadregexp"
>формальних виразів з випередженням</link
>.</para>
      </simplesect>
    </sect1>

  <!-- ====================================================================== -->
  <!--                  User Defined Regular Expressions                      -->
  <!-- ====================================================================== -->
    <sect1 id="userdefinedregexps">
      <title
>Формальні вирази, визначені користувачем</title>
      <para
>У лівій частині області редагування міститься список визначених користувачем формальних виразів. Деякі з шаблонів формальних виразів встановлюються разом з &kde;, інші ж ви можете визначити власноруч.</para
> 

      <para
>У цих формальних виразів два призначення (<link linkend="screenorganization"
>див. докладний опис</link
>), а саме: 1) створити набір будівельних цеглинок для інших формальних виразів; 2) зробити вигляд поширених формальних виразів наочнішим.</para>

      <para
>Ви можете зберігати ваші власні формальні вирази: для цього достатньо навести вказівник миші на область редагування з таким формальним виразом, клацнути правою кнопкою миші і обрати у контекстному меню пункт <literal
>Зберегти формальний вираз</literal
>.</para>

      <para
>Якщо формальний вираз, який ви маєте намір зберегти перебуває у <link linkend="compoundtool"
>контейнері складання</link
>, формальний вираз, використаний як будівельний блок у складніших виразах, виглядатиме акуратніше.</para>

      <para
>Ви можете вилучити або перейменувати визначені вами формальні вирази: наведіть вказівник миші на відповідний пункт у списку і клацніть правою кнопкою миші, щоб відкрити контекстне меню з потрібними вам пунктами.</para>
    </sect1>
  </chapter>

  <!-- ====================================================================== -->
  <!--                  Reporting a bug and Suggesting Features               -->
  <!-- ====================================================================== -->
  <chapter id="bugreport">
    <title
>Повідомлення про вади та запити на реалізацію можливостей</title>
    <para
>Для повідомлень про вади і запитів щодо реалізації можливостей слід використовувати <ulink url="http://bugs.kde.org/"
>Систему стеження за вадами у &kde;</ulink
>. <emphasis role="strong"
>Перш ніж</emphasis
> повідомити про ваду або запропонувати реалізацію можливості, будь ласка, перевірте, чи не було вже подібного <ulink url="http://bugs.kde.org/buglist.cgi?quicksearch=kregexpeditor"
>повідомлення/запиту</ulink
>.</para>
  </chapter>

  <!-- ====================================================================== -->
  <!--                                 FAQ                                    -->
  <!-- ====================================================================== -->
  <chapter id="faq">
    <title
>Часті запитання</title>
    <sect1 id="question1">
      <title
>Чи підтримує редактор формальних виразів зворотні посилання?</title>
      <para
>Ні, ще не підтримує. Реалізацію підтримки заплановано у наступних версіях.</para>
    </sect1>

    <sect1 id="question2">
      <title
>Чи може редактор формальних виразів показувати відповідники?</title>
      <para
>Ні, сподіваємося цю можливість буде реалізовано у наступній версії програми.</para>
    </sect1>

    <sect1 id="question3">
      <title
>Я є автором однієї з програм &kde;, як мені скористатися цим віджетом у моїй програмі?</title>
      <para
>Ознайомтеся з <ulink url="http://developer.kde.org/documentation/library/cvs-api/classref/interfaces/KRegExpEditorInterface.html"
>документацією щодо класу KRegExpEditorInterface</ulink
>.</para>
    </sect1>

    <sect1 id="question4">
      <title
>Не можу знайти кнопку <emphasis
>Редагувати формальний вираз</emphasis
>, наприклад у konqueror іншого комплексу програм KDE3, чому?</title>
      <para
>Віджет формальних виразів міститься у пакунку &kde;-utils. Якщо цей пакунок не буде встановлено, у програмах не буде показано кнопок <emphasis
>редагувати формальний вираз</emphasis
>.</para>
    </sect1>
  </chapter>

  <!-- ====================================================================== -->
  <!--                           Credits and Licenses                         -->
  <!-- ====================================================================== -->
  <chapter id="credits-and-license">
    <title
>Подяки і ліцензування</title>

    <para
>Авторські права на документацію належать Jesper K. Pedersen &Jesper.Pedersen.mail;, ©2001 </para>


<para
>Переклад українською: Юрій Чорноіван <email
>yurchor@ukr.net</email
></para
> &underFDL; &underGPL; </chapter>


</book>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-namecase-general:t
sgml-general-insert-case:lower
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:2
sgml-indent-data:t
sgml-parent-document:nil
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
-->
